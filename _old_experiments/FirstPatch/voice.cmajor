graph Voice
{
    input event (std::notes::NoteOn, std::notes::NoteOff) eventIn;
    output stream float out;

    node
    {
        noteToFrequency = NoteToFrequency;
        envelope = std::envelopes::FixedASR (0.01f, 0.1f);
        oscillator = std::oscillators::Sine (float32);
        oscillator2 = std::oscillators::PolyblepOscillator (
            float32, 
            std::oscillators::Shape::sawtoothUp
        ); 
        lowpass = std::filters(float, float32, 64)::butterworth (2)::Processor(0);
    }

    connection
    {
        eventIn -> noteToFrequency -> add(2.0f) -> mul(1.005f) -> oscillator.frequencyIn;
        eventIn -> noteToFrequency -> add(-2.0f) -> oscillator2.frequencyIn;
        eventIn -> noteToFrequency -> mul(4.0f) -> lowpass.frequency;
        eventIn -> envelope.eventIn;
        (envelope.gainOut * (oscillator.out + oscillator2.out)) -> lowpass.in;
        lowpass.out -> out;
    }
}

