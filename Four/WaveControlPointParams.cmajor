namespace Synth
{
    // This approach is a work-around to enable easier state management. By
    // making every individual float value a param state is handled for us.
    // The first approach was to use a worker and state management in js in
    // combination with an array (actually of sample values rather than control
    // points) but that proved to be buggy and unreliable. This "new" approach
    // gets along better with hosts (and as an added bonus you can manipulate
    // waveforms using the host's UI as well).
    processor WaveControlPointParams()
    {
        input event float point0   [[ name: "point0", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[0] ]];
        input event float point1   [[ name: "point1", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[1] ]];
        input event float point2   [[ name: "point2", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[2] ]];
        input event float point3   [[ name: "point3", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[3] ]];
        input event float point4   [[ name: "point4", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[4] ]];
        input event float point5   [[ name: "point5", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[5] ]];
        input event float point6   [[ name: "point6", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[6] ]];
        input event float point7   [[ name: "point7", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[7] ]];
        input event float point8   [[ name: "point8", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[8] ]];
        input event float point9   [[ name: "point9", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[9] ]];
        input event float point10  [[ name: "point10", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[10] ]];
        input event float point11  [[ name: "point11", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[11] ]];
        input event float point12  [[ name: "point12", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[12] ]];
        input event float point13  [[ name: "point13", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[13] ]];
        input event float point14  [[ name: "point14", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[14] ]];
        input event float point15  [[ name: "point15", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[15] ]];
        input event float point16  [[ name: "point16", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[16] ]];
        input event float point17  [[ name: "point17", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[17] ]];
        input event float point18  [[ name: "point18", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[18] ]];
        input event float point19  [[ name: "point19", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[19] ]];
        input event float point20  [[ name: "point20", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[20] ]];
        input event float point21  [[ name: "point21", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[21] ]];
        input event float point22  [[ name: "point22", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[22] ]];
        input event float point23  [[ name: "point23", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[23] ]];
        input event float point24  [[ name: "point24", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[24] ]];
        input event float point25  [[ name: "point25", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[25] ]];
        input event float point26  [[ name: "point26", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[26] ]];
        input event float point27  [[ name: "point27", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[27] ]];
        input event float point28  [[ name: "point28", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[28] ]];
        input event float point29  [[ name: "point29", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[29] ]];
        input event float point30  [[ name: "point30", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[30] ]];
        input event float point31  [[ name: "point31", min: -1.0, max: 1.0, init: DEFAULT_CONTROL_POINTS[31] ]];

        output event float[] controlPoints;

        float[CONTROL_POINTS] points = DEFAULT_CONTROL_POINTS;

        void main() {
            controlPoints <- points;
            advance();
        }

        // @todo can all of these separate params be debounced? ._.
        void update() {
            controlPoints <- points;
        }

        event point0 (float newValue)    { points[0] = newValue; update(); }
        event point1 (float newValue)    { points[1] = newValue; update(); }
        event point2 (float newValue)    { points[2] = newValue; update(); }
        event point3 (float newValue)    { points[3] = newValue; update(); }
        event point4 (float newValue)    { points[4] = newValue; update(); }
        event point5 (float newValue)    { points[5] = newValue; update(); }
        event point6 (float newValue)    { points[6] = newValue; update(); }
        event point7 (float newValue)    { points[7] = newValue; update(); }
        event point8 (float newValue)    { points[8] = newValue; update(); }
        event point9 (float newValue)    { points[9] = newValue; update(); }
        event point10 (float newValue)   { points[10] = newValue; update(); }
        event point11 (float newValue)   { points[11] = newValue; update(); }
        event point12 (float newValue)   { points[12] = newValue; update(); }
        event point13 (float newValue)   { points[13] = newValue; update(); }
        event point14 (float newValue)   { points[14] = newValue; update(); }
        event point15 (float newValue)   { points[15] = newValue; update(); }
        event point16 (float newValue)   { points[16] = newValue; update(); }
        event point17 (float newValue)   { points[17] = newValue; update(); }
        event point18 (float newValue)   { points[18] = newValue; update(); }
        event point19 (float newValue)   { points[19] = newValue; update(); }
        event point20 (float newValue)   { points[20] = newValue; update(); }
        event point21 (float newValue)   { points[21] = newValue; update(); }
        event point22 (float newValue)   { points[22] = newValue; update(); }
        event point23 (float newValue)   { points[23] = newValue; update(); }
        event point24 (float newValue)   { points[24] = newValue; update(); }
        event point25 (float newValue)   { points[25] = newValue; update(); }
        event point26 (float newValue)   { points[26] = newValue; update(); }
        event point27 (float newValue)   { points[27] = newValue; update(); }
        event point28 (float newValue)   { points[28] = newValue; update(); }
        event point29 (float newValue)   { points[29] = newValue; update(); }
        event point30 (float newValue)   { points[30] = newValue; update(); }
        event point31 (float newValue)   { points[31] = newValue; update(); }
    }
}
