namespace Synth
{
    processor PhaserBypass {
        input stream float in;
        output stream float out;

        input event Params paramsIn;

        node phaser = Common::Phaser;
        bool bypass_ = true;

        event paramsIn(Params p) {
            phaser.coefficientIn <- p.phaserCoef;
            phaser.rateHzIn <- p.phaserRate;
            phaser.spreadIn <- p.phaserSpread;
            phaser.depthIn <- p.phaserDepth;
            bypass_ = p.phaserBypass;
        }

        void main() {
            loop {
                if (bypass_) {
                    out <- out.type (in);
                } else {
                    phaser.in <- in;
                    out <- phaser.out;
                    phaser.advance();
                }
                advance();
            }
        }
    }
}